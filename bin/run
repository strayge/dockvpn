#!/bin/sh
set -e

if [ "$SSL" = "0" ] || [ "$SSL" = "False" ] || [ "$SSL" = "false" ]
then
    SSL_USED=0
else
    SSL_USED=1
fi

if [ -n "$CONTROL_USERNAME" ] && [ -n "$CONTROL_PASSWORD" ]
then
    WEB_USED=1
else
    WEB_USED=0
fi


[ -d /dev/net ] ||
    mkdir -p /dev/net
[ -c /dev/net/tun ] ||
    mknod /dev/net/tun c 10 200

cd /etc/openvpn
if ! [ -f ca.crt ]; then
    /etc/easyrsa/easyrsa --batch init-pki
    /etc/easyrsa/easyrsa --batch --days=7300 --keysize=4096 --req-cn="DockVPN CA" build-ca nopass
    /etc/easyrsa/easyrsa --batch --days=7300 gen-crl
    /etc/easyrsa/easyrsa --batch --keysize=4096 --req-cn="DockVPN Server" gen-req server nopass
    /etc/easyrsa/easyrsa --batch --days=7300 sign-req server server
    /etc/easyrsa/easyrsa --batch --keysize=4096 gen-dh
    openvpn --genkey --secret ta.key
    cp pki/ca.crt pki/issued/server.crt pki/private/server.key pki/crl.pem pki/dh.pem /etc/openvpn
    mkdir -p /etx/openvpn/clients
    mkdir -p /etc/openvpn/logs
fi

cat > openvpn_tcp.conf <<EOF
proto tcp
port 1194
dev tun
server 192.168.255.0 255.255.255.128
verb 4
persist-key
persist-tun
cipher AES-256-CBC
auth SHA256
tls-server
tls-timeout 120
dh /etc/openvpn/dh.pem
ca /etc/openvpn/ca.crt
cert /etc/openvpn/server.crt
key /etc/openvpn/server.key
crl-verify /etc/openvpn/crl.pem
tls-auth /etc/openvpn/ta.key 0
push "redirect-gateway def1 bypass-dhcp"
push "dhcp-option DNS 8.8.4.4"
comp-lzo
keepalive 50 300
status-version 3
log-append /etc/openvpn/logs/tcp-server.log
status /etc/openvpn/logs/tcp-status.log 1
user nobody
group nogroup
EOF

cat > openvpn_udp.conf <<EOF
proto udp
port 1194
dev tun
server 192.168.255.128 255.255.255.128
verb 4
persist-key
persist-tun
cipher AES-256-CBC
auth SHA256
tls-server
tls-timeout 120
dh /etc/openvpn/dh.pem
ca /etc/openvpn/ca.crt
cert /etc/openvpn/server.crt
key /etc/openvpn/server.key
crl-verify /etc/openvpn/crl.pem
tls-auth /etc/openvpn/ta.key 0
push "redirect-gateway def1 bypass-dhcp"
push "dhcp-option DNS 8.8.4.4"
comp-lzo
keepalive 50 300
status-version 3
log-append /etc/openvpn/logs/udp-server.log
status /etc/openvpn/logs/udp-status.log 1
user nobody
group nogroup
EOF

chmod -R +r /etc/openvpn

if [ -z "$PORT_CONTROL" ]
then
    PORT_CONTROL=8000
fi

if [ -z "$EXTERNAL_ADDRESS" ]
then
    EXTERNAL_ADDRESS=$(curl whatismyip.akamai.com)
fi

iptables -t nat -A POSTROUTING -s 192.168.255.0/24 -o eth0 -j MASQUERADE

if [ -n "$EXTERNAL_ADDRESS" ] && [ "$WEB_USED" = "1" ] && [ "$SSL_USED" = "1" ]
then
    echo "Web interface should be accessed as https://$EXTERNAL_ADDRESS:$PORT_CONTROL/"
fi

if [ -n "$EXTERNAL_ADDRESS" ] && [ "$WEB_USED" = "1" ] && [ "$SSL_USED" = "0" ]
then
    echo "Web interface should be accessed as http://$EXTERNAL_ADDRESS:$PORT_CONTROL/"
fi

if [ "$WEB_USED" = "0" ]
then
    echo "Credentials for web service not provided. Web interface will not be enabled!"
fi

touch /etc/openvpn/logs/stdout_openvpn_tcp.log /etc/openvpn/logs/stdout_openvpn_udp.log /etc/openvpn/logs/stdout_web_control.log
while true ; do openvpn openvpn_tcp.conf ; done > /etc/openvpn/logs/stdout_openvpn_tcp.log &
while true ; do openvpn openvpn_udp.conf ; done > /etc/openvpn/logs/stdout_openvpn_udp.log &
while true ; do python2.7 /usr/local/sbin/web_control.py ; done > /etc/openvpn/logs/stdout_web_control.log &

tail -F /etc/openvpn/logs/stdout_*.log
